import org.jetbrains.kotlin.gradle.dsl.JvmTarget

apply plugin: 'org.jetbrains.kotlin.jvm'


java.sourceCompatibility = 11
java.targetCompatibility = 11
if (JavaVersion.current().isJava9Compatible()) {
  compileJava.options.release.set(11)
}
kotlin.compilerOptions.jvmTarget.set(JvmTarget.JVM_11)
compileKotlin.kotlinOptions.jvmTarget = 11

eclipse.project.name = appName + '-common'

dependencies {
  api "com.badlogicgames.gdx:gdx-ai:$aiVersion"
  api "com.badlogicgames.gdx:gdx:$gdxVersion"

  implementation 'com.caoccao.javet:javet:4.1.1'
  implementation 'com.caoccao.javet:javenode:0.8.0'

  api "dev.ultreon.JNoiseJDK11:jnoise-core:a6507bcc7e", {
    exclude group:"org.jspecify", module:"jspecify"
  }
  api "dev.ultreon.JNoiseJDK11:jnoise-pipeline:a6507bcc7e", {
    exclude group:"org.jspecify", module:"jspecify"
  }
  api "dev.ultreon.JNoiseJDK11:jnoise-generators:a6507bcc7e", {
    exclude group:"org.jspecify", module:"jspecify"
  }
  api "dev.ultreon.JNoiseJDK11:jnoise-modifiers:a6507bcc7e", {
    exclude group:"org.jspecify", module:"jspecify"
  }
  api "dev.ultreon.JNoiseJDK11:jnoise-modules:a6507bcc7e", {
    exclude group:"org.jspecify", module:"jspecify"
  }
  api "io.github.libktx:ktx-ai:$ktxVersion"
  api "io.github.libktx:ktx-app:$ktxVersion"
  api "io.github.libktx:ktx-artemis:$ktxVersion"
  api "io.github.libktx:ktx-assets-async:$ktxVersion"
  api "io.github.libktx:ktx-assets:$ktxVersion"
  api "io.github.libktx:ktx-async:$ktxVersion"
  api "io.github.libktx:ktx-collections:$ktxVersion"
  api "io.github.libktx:ktx-i18n:$ktxVersion"
  api "io.github.libktx:ktx-inject:$ktxVersion"
  api "io.github.libktx:ktx-json:$ktxVersion"
  api "io.github.libktx:ktx-log:$ktxVersion"
  api "io.github.libktx:ktx-math:$ktxVersion"
  api "io.github.libktx:ktx-preferences:$ktxVersion"
  api "io.github.libktx:ktx-reflect:$ktxVersion"

  // ByteBuddy
  implementation "net.bytebuddy:byte-buddy:$byteBuddyVersion"
}

jar {
  archiveBaseName.set(appName)
  duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
  dependsOn configurations.runtimeClasspath
  doLast {
    file(archiveFile).setExecutable(true, false)
  }
}

// Equivalent to the jar task; here for compatibility with gdx-setup.
tasks.register('dist') {
  dependsOn 'jar'
}

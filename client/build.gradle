import org.jetbrains.kotlin.gradle.dsl.JvmTarget

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

java.sourceCompatibility = 11
java.targetCompatibility = 11
if (JavaVersion.current().isJava9Compatible()) {
  compileJava.options.release.set(11)
}

eclipse.project.name = appName + '-client'

tasks.register("zipDlcCore", Zip) {
  from processDlcCoreResources.inputs
  archiveFileName = "dlc-core.qvcontent"
}

tasks.register("zipDlcExtended", Zip) {
  from processDlcExtendedResources.inputs
  archiveFileName = "dlc-extended.qvcontent"
}

processResources {
  dependsOn("zipDlcCore", "zipDlcExtended")
  doFirst {
    copy {
      from zipDlcCore.outputs
      into rootProject.file("assets")
    }
    copy {
      from zipDlcExtended.outputs
      into rootProject.file("assets")
    }
  }
}

sourceSets {
  create("dlc-core")
  create("dlc-extended")
}

dependencies {
  api project(':common')

  api "com.badlogicgames.gdx:gdx:$gdxVersion"
  api "com.github.tommyettinger:regexodus:$regExodusVersion"
  api "com.github.tommyettinger:textratypist:$textratypistVersion"
  api "io.github.libktx:ktx-actors:$ktxVersion"
  api "io.github.libktx:ktx-ai:$ktxVersion"
  api "io.github.libktx:ktx-app:$ktxVersion"
  api "io.github.libktx:ktx-artemis:$ktxVersion"
  api "io.github.libktx:ktx-ashley:$ktxVersion"
  api "io.github.libktx:ktx-assets-async:$ktxVersion"
  api "io.github.libktx:ktx-assets:$ktxVersion"
  api "io.github.libktx:ktx-async:$ktxVersion"
  api "io.github.libktx:ktx-collections:$ktxVersion"
  api "io.github.libktx:ktx-freetype-async:$ktxVersion"
  api "io.github.libktx:ktx-freetype:$ktxVersion"
  api "io.github.libktx:ktx-graphics:$ktxVersion"
  api "io.github.libktx:ktx-i18n:$ktxVersion"
  api "io.github.libktx:ktx-inject:$ktxVersion"
  api "io.github.libktx:ktx-json:$ktxVersion"
  api "io.github.libktx:ktx-log:$ktxVersion"
  api "io.github.libktx:ktx-math:$ktxVersion"
  api "io.github.libktx:ktx-preferences:$ktxVersion"
  api "io.github.libktx:ktx-reflect:$ktxVersion"
  api "io.github.libktx:ktx-scene2d:$ktxVersion"
  api "io.github.libktx:ktx-style:$ktxVersion"
  api "io.github.libktx:ktx-tiled:$ktxVersion"
  api "io.github.libktx:ktx-vis-style:$ktxVersion"
  api "io.github.libktx:ktx-vis:$ktxVersion"
  api "net.onedaybeard.artemis:artemis-odb:$artemisOdbVersion"
  api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
//  api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion"
  api "space.earlygrey:shapedrawer:$shapeDrawerVersion"

  // Javet
//  api "com.caoccao.javet:javet:4.1.1"
//  api "com.caoccao.javet:javenode:0.8.0"

  if (enableGraalNative == 'true') {
    implementation "io.github.berstanio:gdx-svmhelper-annotations:$graalHelperVersion"
  }
}
